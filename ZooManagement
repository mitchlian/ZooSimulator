import java.util.Scanner;
import java.util.ArrayList;

public class ZooManagement {
    private final static Scanner input = new Scanner(System.in);
    private final static ArrayList<Zoo> zoos = new ArrayList<>();
    private final static ArrayList<Enclosure> enclosures = new ArrayList<>();

    public static void main(String[] args) {

        System.out.println("Welcome to the Zoo Management program.");
        System.out.println("=======================================");

        while (true) {

            // prompt for user input
            System.out.println();
            System.out.println("What would you like to manage?");
            System.out.println();
            System.out.println("1) Manage Zoos");
            System.out.println("2) Manage Enclosures");
            System.out.println("3) Manage Animals");
            System.out.println("Q) Quit");
            System.out.println();
            System.out.println("Please select an option: ");
            String option = input.nextLine();

            // check all options
            switch (option.trim().toUpperCase()) {
                case "1":
                    manageZoos();
                    break;
                case "2":
                    manageEnclosures();
                    break;
                case "3":
                    manageAnimals();
                    break;
                case "Q":
                    return;
                default:
                    System.out.println();
                    System.out.println("Invalid option selected. Please try again.");
                    System.out.println();
            }
        }
    }


    public static void manageZoos() {

        while(true) {

            System.out.println();
            System.out.println("Manage Zoos");
            System.out.println("-------------------------");
            System.out.println("a) Create new zoos");
            System.out.println("b) Delete existing zoos");
            System.out.println("c) Calculate total area of all enclosures in the zoo");
            System.out.println("d) Count total number of enclosures");
            System.out.println("Q) Back to main menu");
            System.out.println();
            System.out.println("Please select an option: ");
            String option = input.nextLine();
            System.out.println();

            switch(option.trim().toUpperCase()) {
                case "A":
                    System.out.print("Enter name of the zoo: ");
                    String name = input.nextLine();
                    System.out.print("Enter description of the zoo: ");
                    String description = input.nextLine();
                    zoos.add(new Zoo(name, description, enclosures));
                    System.out.println();
                    System.out.println("Zoo created!");
                    break;
                case "B":
                    // Terminates the loop after printing the warning message
                    if(zoos.isEmpty()){
                        System.out.println("WARNING: No Zoos.");
                        break;
                    }
                    System.out.print("Select the zoo to remove: ");
                    System.out.println();

                    //Display list of zoos
                    // This loop iterates over each Zoo object (zoo) in the zoos ArrayList and prints the string representation of each Zoo object by calling its toString() method. This way, you'll print the details of each Zoo object separately in each iteration.
                    for(Zoo zoo : zoos){
                        System.out.println(zoo.toString());
                    }

                    //Check if input is not an integer
                    while(!input.hasNextInt()){
                        System.out.println("Invalid input. Please enter a number");
                        input.nextLine(); //Consume the invalid input if you don't put input.nextLine, code will have error mismatch
                    }

                    int opt = input.nextInt();
                    input.nextLine();
                    System.out.println();

                    // Check if the entered number is within the valid range
                    if(opt < 1 || opt > zoos.size()) {
                        System.out.println("Invalid option. Please enter a valid zoo Number.");
                        //Consume the invalid input if you don't put input.nextLine, code will have error mismatch
                        //input.nextLine allows you to type your input again

                    } else {
                        zoos.remove(opt - 1);
                        System.out.println("Zoo Deleted.");
                    }
                    break;
                case "C":

                    break;
                case "D":
                    for(Enclosure enclosure : enclosures) {
                        System.out.println(enclosure.toString());
                        System.out.println("Press any key to go back to \"Manage enclosure\" ");
                        input.nextLine();
                    }
                    break;
                case "Q":
                    return;
                default:
                    System.out.println();
                    System.out.println("Invalid input. Please try again.");
                    System.out.println();

        }
    }
}
    public static void manageAnimals() {
        while (true) {
            System.out.println("Manage your animals!");
            System.out.println();
            System.out.println("A. Add animal");
            System.out.println("B. Remove animal");
            System.out.println("C. Check if animal has companion");
            System.out.println("X. Back to Main menu");
            System.out.println();
            System.out.print("Select an option: ");
            String option = input.nextLine();
            System.out.println();

            switch (option.trim().toUpperCase()){
                case "A":
                    addAnimal();
                    break;
                case "B":
                    removeAnimal();
                    break;
                case "C":
                    animalCompanion();
                    break;
                case "X":
                    return;
                default:
                    System.out.println();
                    System.out.println("Invalid option selected!");
                    System.out.println();

                    switch (option.trim().toUpperCase()) {
                        case "A":
                            System.out.print("Enter animal name: ");
                            String name = input.nextLine();
                            System.out.print("Enter Species of animal: ");
                            String species = input.nextLine();

                            System.out.print("Which enclosure should this animal be in: ");
                            int enc = input.nextInt();
                            //add error if never input int enclosure
                            animals.add(new Animal(species,enclosure,areaNeeded));

                        case "B":
                            for (int i = 0; i < animals.size(); i++) {
                                System.out.printf("%d. %s", i + 1, animals.get(1).getName());
                            }
                            System.out.print("Select the animal to remove: ");
                            //always put nextLine() after nextInt()
                            int opt = input.nextInt();
                            input.nextLine();
                            zoos.remove(opt - 1);
                            break;

                        case "C":
                            System.out.print("Select an animal: ");
                            //show arraylist of animals available
                            //scanner to select input
                            // For loop to scan through the arraylist of animals
                            // use boolean false if no same animal, boolean true if there is another of the same species

                    }
            }
        }
    }
    public static void manageEnclosures() {
        while (true) {
            System.out.println("Manage your enclosures!");
            System.out.println();
            System.out.println("A. Create new enclosure");
            System.out.println("B. Delete existing enclosure");
            System.out.println("C. Back to main menu");
            System.out.println();
            System.out.println("Select an option: ");
            String option = input.nextLine();
            System.out.println();

            switch (option.trim().toUpperCase()) {
                case "A":
                    createNewEnclosure();
                    break;
                case "B":
                    deleteExistingEnclosure();
                    break;
                //back to main menu
                case "X":
                    return;

                    break;
                default:
                    System.out.println();
                    System.out.println("Invalid option selected!");
                    System.out.println();

                    switch (option.trim().toUpperCase()) {

                        case "A":
                            System.out.print("Enter name of the enclosure: ");
                            String name = input.nextLine();
                            System.out.print("Enter description: ");
                            String desc = input.nextLine();
                            enclosures.add(new Enclosure(name, 0, new ArrayList<>()));
                            break;

                        case "B":
                            for (int i = 0; i < enclosures.size(); i++) {
                                System.out.printf("%d. %s", i + 1, enclosures.get(i).getName());
                            }
                            System.out.print("Select enclosure to remove: ");
                            int opt = input.nextInt();
                            input.nextLine();

                            if ( opt >= 1 && opt <= enclosures.size()) {
                                enclosures.remove(opt - 1);
                            }
                            break;

                            case "Q":
                                return;
                            break;

                            default:
                                System.out.println();
                                System.out.println("Invalid option selected!");
                                System.out.println();
                    }
            }
        }
    }
